# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - pmassistant-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      # --- 以下の仮想環境のセットアップと依存関係のインストールステップを削除 ---
      # - name: Set up Python version
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.12'
      #     
      # - name: Create and start virtual environment
      #   run: |
      #     python -m venv venv
      #     source venv/bin/activate
      #     
      # - name: Install dependencies
      #   run: pip install -r requirements.txt
      # ------------------------------------------------------------------
      
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      # テストを実行する場合は、ここでも仮想環境のアクティベーションとpip installが必要になりますが、
      # デプロイパッケージには含めません。

      - name: Zip artifact for deployment
        # このzipコマンドも、vnefv/ を含めないように修正するか、
        # 後述のwebapps-deployアクションのpackageオプションをうまく活用します。
        # シンプルに、アプリケーションのコードだけをzipするのが良いでしょう。
        # 例: zip release.zip ./* -r -x "venv/*" -x ".git/*"
        run: zip -r release.zip . -x "venv/*" -x ".git/*" -x "__pycache__/*" # venvを除外する
        
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip # venvは含めない

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip -q release.zip # `-q` はquietオプションでログを減らす

      # --- ここが最も重要 ---
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'pmassistant-app'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_B556C9848A0D4FD4A792D9E0D87F2ED2 }}
          # package: . を追加します。これにより、現在のディレクトリのコンテンツがOryxビルドの入力として使用されます。
          package: . 
          # OryxにPythonバージョンを指定します (これにより、自動検出ではなく確実に3.12が使われます)
          # 注意: これにより、デプロイログに 'Detecting platforms...' 'Version '3.12.11' of platform 'python' is not installed. Generating script to install it...' のようなメッセージが表示されますが、これは正常です。
          # python-version: '3.12' # このオプションはwebapps-deployアクションでは直接サポートされていない可能性が高いです。Oryxが自動検出するか、App Serviceの構成で設定します。
                                 # (補足： Oryxは通常、利用可能な最新の3.12を使うはずです)